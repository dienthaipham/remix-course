{
  "version": 3,
  "sources": ["empty-module:@remix-run/node", "../../../app/routes/notes.tsx", "../../../app/components/NewNote.tsx", "../../../app/components/NoteList.tsx"],
  "sourcesContent": ["module.exports = {};", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\notes.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\notes.tsx\");\n  import.meta.hot.lastModified = \"1702825677874.0398\";\n}\n// REMIX HMR END\n\nimport { redirect } from '@remix-run/node';\nimport { useLoaderData, Link } from '@remix-run/react';\nimport NewNote, { links as newNoteLinks } from '~/components/NewNote';\nimport NoteList, { links as noteListLinks } from '~/components/NoteList';\nimport { getStoredNotes, storeNotes } from '~/data/notes';\nexport default function NotesPage() {\n  _s();\n  const notes = useLoaderData();\n  return <main>\n            <NewNote />\n            <NoteList notes={notes} />\n        </main>;\n}\n_s(NotesPage, \"lCYwax5cFMe1PUxNanskqlEV3FQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = NotesPage;\nexport async function loader() {\n  const notes = await getStoredNotes();\n  return notes;\n}\nexport const action = async ({\n  request\n}) => {\n  // throw(new Error('This is test error'));\n\n  const formData = await request.formData();\n  const noteData = Object.fromEntries(formData); // Replace 'any' with a more specific type if possible\n\n  // Add validation...\n  if (noteData.title.trim().length < 5) {\n    return {\n      message: 'Invalid title - must be at least 5 characters long.'\n    };\n  }\n  const existingNotes = await getStoredNotes();\n  noteData.id = new Date().toISOString();\n  const updatedNotes = existingNotes.concat(noteData);\n  await storeNotes(updatedNotes);\n  await new Promise((resolve, reject) => setTimeout(() => resolve(), 2000));\n  return redirect('/notes');\n};\nexport const links = () => {\n  return [...newNoteLinks(), ...noteListLinks()];\n};\nexport function CatchBoundary() {\n  _s2();\n  const caughtResponse = useCatch();\n  const message = caughtResponse.data?.message || 'Data not found.';\n  return <main>\n        <NewNote />\n        <p className='info-message'>{message}</p>\n      </main>;\n}\n_s2(CatchBoundary, \"aC0yisvsYUE46qxyVmeMcDtCdmM=\", true);\n_c2 = CatchBoundary;\nexport function ErrorBoundary() {\n  return <main className=\"error\">\n        <h1>An error related to your notes occurred!</h1>\n        <p>Error in Notes Route</p>\n        <p>\n          Back to <Link to=\"/\">safety</Link>!\n        </p>\n      </main>;\n}\n_c3 = ErrorBoundary;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"NotesPage\");\n$RefreshReg$(_c2, \"CatchBoundary\");\n$RefreshReg$(_c3, \"ErrorBoundary\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\NewNote.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\NewNote.tsx\");\n}\n// REMIX HMR END\n\nimport { Form, useNavigation, useActionData } from '@remix-run/react';\nimport styles from './NewNote.css';\nfunction NewNote() {\n  _s();\n  const navigation = useNavigation();\n  const data = useActionData();\n  const isSubmitting = navigation.state === 'submitting';\n  return <Form method=\"post\" id=\"note-form\">\n      {data?.message && <p>{data.message}</p>}\n      <p>\n        <label htmlFor=\"title\">Title</label>\n        <input type=\"text\" id=\"title\" name=\"title\" required />\n      </p>\n      <p>\n        <label htmlFor=\"content\">Content</label>\n        <textarea id=\"content\" name=\"content\" rows={5} required />\n      </p>\n      <div className=\"form-actions\">\n        <button disabled={isSubmitting}>\n          {isSubmitting ? 'Adding...' : 'Add Note'}\n        </button>\n      </div>\n    </Form>;\n}\n_s(NewNote, \"fKFN9xseM5n8F1WPfjaTTyC08vc=\", false, function () {\n  return [useNavigation, useActionData];\n});\n_c = NewNote;\nexport default NewNote;\nexport const links = () => {\n  return [{\n    rel: 'stylesheet',\n    href: styles\n  }];\n};\nvar _c;\n$RefreshReg$(_c, \"NewNote\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\NoteList.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\NoteList.tsx\");\n}\n// REMIX HMR END\n\nimport { Link } from '@remix-run/react';\nimport styles from './NoteList.css';\n\n// Define a type for the individual note\n\n// Define the type for the component's props\n\nfunction NoteList({\n  notes\n}) {\n  return <ul id=\"note-list\">\n      {notes.map((note, index) => <li key={note.id} className=\"note\">\n          <Link to={note.id}>\n            <article>\n              <header>\n                <ul className=\"note-meta\">\n                  <li>#{index + 1}</li>\n                  <li>\n                    <time dateTime={note.id}>\n                      {new Date(note.id).toLocaleDateString('en-US', {\n                    day: 'numeric',\n                    month: 'short',\n                    year: 'numeric',\n                    hour: '2-digit',\n                    minute: '2-digit'\n                  })}\n                    </time>\n                  </li>\n                </ul>\n                <h2>{note.title}</h2>\n              </header>\n              <p>{note.content}</p>\n            </article>\n          </Link>\n        </li>)}\n    </ul>;\n}\n_c = NoteList;\nexport default NoteList;\nexport const links = () => {\n  return [{\n    rel: 'stylesheet',\n    href: styles\n  }];\n};\nvar _c;\n$RefreshReg$(_c, \"NoteList\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["NewNote_default", "import_jsx_dev_runtime", "_c", "NoteList_default", "links", "import_jsx_dev_runtime", "_s", "_s2", "NewNote_default", "NoteList_default", "_c", "links", "_s2", "NewNote_default", "_c2", "_c3", "_c"]
}
